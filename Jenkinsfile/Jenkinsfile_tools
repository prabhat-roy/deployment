pipeline {
    agent any
    
    stages {
        stage('Git Checkout') {
            steps {
                script {
                    checkout scm
                    }
                }
            }
            stage('Load Environment Variables') {
                steps {
                    script {
                        def envFile = readFile('groovy/Deployment.env').split('\n')
                        def envUtil = load "groovy/LoadEnvVars.groovy"
                        def envVars = envUtil.loadEnvVars("groovy/Deployment.env")

                        // Inject into env
                        envVars.each { key, val ->
                            env."${key}" = val
                            echo "Injected: ${key}=${val}"
                        }
                    }
                }
            }
            stage('Detect Cloud Provider') {
                steps {
                    script {
                        def cloudScript = load 'groovy/DetectCloud.groovy'
                        cloudScript.detectAndSaveCloudProvider()
                    }
                }
            }
            stage('Install Unzip') {
                steps {
                    script {
                        def unzipInstaller = load 'groovy/Unzip.groovy'
                        unzipInstaller.installUnzip()
                    }
                }
            }
            stage('Install Cloud CLI Tool') {
                steps {
                    script {
                        def cliInstaller = load 'groovy/InstallCloudCLI.groovy'
                        cliInstaller.installCloudCLI()
                    }
                }
            }

        }
}    
