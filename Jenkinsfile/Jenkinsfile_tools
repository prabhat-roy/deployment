pipeline {
    agent any

    environment {
        ENV_FILE_PATH = 'groovy/Deployment.env'
    }

    stages {
        stage('Load Environment Variables') {
            steps {
                script {
                    echo "[INFO] Checking if groovy/LoadEnvVars.groovy exists"
                    if (fileExists('groovy/LoadEnvVars.groovy')) {
                        echo "[INFO] File exists"
                    } else {
                        error "[ERROR] File does not exist"
                    }

                    // Load the Groovy script that parses the env file
                    def envLoader = load 'groovy/LoadEnvVars.groovy'
                    
                    if (envLoader == null) {
                        error "[ERROR] Failed to load Groovy script"
                    }

                    // Proceed with loading environment variables
                    def envVars = envLoader.call('groovy/Deployment.env')

                    if (envVars == null) {
                        error "[ERROR] No environment variables loaded"
                    }

                    def envList = envVars.collect { key, value -> "${key}=${value}" }

                    withEnv(envList) {
                        echo "SONARQUBE_URL: $SONARQUBE_URL"
                    }
                }
            }
        }
    }
}
