apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "prometheus.fullname" . }}
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "prometheus.fullname" . }}    # Must match headless service name
  replicas: {{ .Values.prometheus.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "prometheus.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "prometheus.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "prometheus.serviceAccountName" . }}
      containers:
        - name: prometheus
          image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
          imagePullPolicy: {{ .Values.prometheus.image.pullPolicy }}
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.enable-lifecycle"
            - "--storage.tsdb.retention.time={{ .Values.prometheus.retention }}"
          ports:
            - containerPort: 9090
              name: web
          resources:
            {{- toYaml .Values.prometheus.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus/
            - name: prometheus-storage
              mountPath: /prometheus
      volumes:
        - name: config
          configMap:
            name: {{ include "prometheus.fullname" . }}
  volumeClaimTemplates:
    - metadata:
        name: prometheus-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.prometheus.storage.size }}
        storageClassName: {{ .Values.prometheus.storage.storageClassName | quote }}
