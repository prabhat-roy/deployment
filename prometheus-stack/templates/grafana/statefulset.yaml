apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "grafana.fullname" . }}
  labels:
    {{- include "grafana.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.grafana.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "grafana.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "grafana.fullname" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "grafana.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "grafana.serviceAccountName" . }}
      containers:
        - name: grafana
          image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
          imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
          ports:
            - containerPort: 3000
              name: grafana
          volumeMounts:
            - name: config-datasource
              mountPath: /etc/grafana/provisioning/datasources
            - name: config-dashboard-provider
              mountPath: /etc/grafana/provisioning/dashboards
            - name: dashboards
              mountPath: /var/lib/grafana/dashboards
            - name: grafana-storage
              mountPath: /var/lib/grafana
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "grafana.fullname" . }}-admin
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "grafana.fullname" . }}-admin
                  key: admin-password
          resources:
            {{- toYaml .Values.grafana.resources | nindent 12 }}
      volumes:
        - name: config-datasource
          configMap:
            name: {{ include "grafana.fullname" . }}-datasource
        - name: config-dashboard-provider
          configMap:
            name: {{ include "grafana.fullname" . }}-dashboard-provider
        - name: dashboards
          configMap:
            name: {{ include "grafana.fullname" . }}-dashboards
  volumeClaimTemplates:
    - metadata:
        name: grafana-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.grafana.persistence.size }}
        storageClassName: {{ .Values.grafana.persistence.storageClassName | quote }}
