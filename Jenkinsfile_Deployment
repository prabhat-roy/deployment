pipeline {
    agent any
    stages {
        stage('Cleanup Workspace') {
            steps {
                script {
                        def cleanupScript = load 'groovy/cleanup.groovy'
                        cleanupScript.setupWorkspace()
                }
            }
        
        }
        stage('Git Checkout') {
            steps {
                script {
                        def props = readProperties file: 'groovy/global.env'
                        def checkoutScript = load 'groovy/checkout.groovy'
                        checkoutScript.checkoutFromGit(props.GIT_BRANCH, props.GIT_REPO_URL)
                }
            }
        }
        stage('Load Global Env') {
            steps {
                script {
                        def envLoader = load 'groovy/global.groovy'
                        def globalEnvVars = envLoader.loadGlobalEnv()
                        withEnv(globalEnvVars) {
                        echo "[INFO] Environment variables now available inside this block:"
                        sh 'env | grep -E "BRANCH_NAME|REPO_URL|ENV"'  // Optional: preview key vars
                }
            }
        }
    }
}
}
