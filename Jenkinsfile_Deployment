pipeline {
    agent any
    stages {
        stage('Load Global Env') {
            steps {
                try{
                script {
                    // Initialize the workspace for the pipeline
                   def envLoader = load 'groovy/global.groovy'
                    // Call the loadGlobalEnv method to load environment variables from global.env
                    // This method will read the global.env file and set environment variables in the pipeline
                    envLoader.loadGlobalEnv()
                }
            }
            catch (e) {
                echo "[ERROR] Failed to load global environment: ${e.message}"
                currentBuild.result = 'FAILURE'
                error("Aborting pipeline due to global env load failure.")
            }
            }
            
        }
        stage('Initialize Workspace') {
            steps {
                script {
                    // Initialize the workspace for the pipeline
                   def setup = load 'groovy/workspace_setup/setup.groovy'
                    // Call the setupWorkspace method to clean the workspace and initialize the Git repo
                    setupWorkspace()
                }
            }
        }
    }
}