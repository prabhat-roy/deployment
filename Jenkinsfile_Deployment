pipeline {
    agent any
    stages {
        stage('Load Global Environment') {
            steps {
                script {
                    try {
                        echo "[INFO] Attempting to load global.groovy..."
                        def envLoader = load 'groovy/global.groovy' // This should load the script
                        echo "[INFO] Loaded global.groovy: ${envLoader}" // Check what is returned

                        envLoader.loadGlobalEnv()

                        echo "[INFO] Global environment loaded successfully."
                            } catch (Exception e) {
                                echo "[ERROR] Failed to load global environment: ${e.message}"
                                currentBuild.result = 'FAILURE'
                                error("Aborting pipeline due to global env load failure.")
                    }
                }
            }
        }
        
    }
}