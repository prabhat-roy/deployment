pipeline {
    agent any
    stages {
        stage('Load Global Env') {
    steps {
        script {
            try {
                echo "[INFO] Attempting to load global.groovy..."
                def envLoader = load 'groovy/global.groovy'
                envLoader.loadGlobalEnv()
                echo "[INFO] Global environment loaded successfully."
            } catch (e) {
                echo "[ERROR] Failed to load global environment: ${e.message}"
                currentBuild.result = 'FAILURE'
                error("Aborting pipeline due to global env load failure.")
            }
        }
    }
}
        stage('Initialize Workspace') {
            steps {
                script {
                    // Initialize the workspace for the pipeline
                   def setup = load 'groovy/workspace_setup/setup.groovy'
                    // Call the setupWorkspace method to clean the workspace and initialize the Git repo
                    setupWorkspace()
                }
            }
        }
    }
}